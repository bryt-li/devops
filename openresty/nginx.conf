
events {
  worker_connections 1024;
}

http {
  lua_shared_dict auto_ssl 1m;
  lua_shared_dict auto_ssl_settings 64k;
  resolver 8.8.8.8;

  init_by_lua_block {
    auto_ssl = (require "resty.auto-ssl").new()
    auto_ssl:set("allow_domain", function(domain)
      return ngx.re.match(domain, "^(redin.co|alexanderandjamessofas.cn)$", "ijo")
    end)
    auto_ssl:set("dir", "/tmp/")
    
    auto_ssl:init()
  }

  init_worker_by_lua_block {
    auto_ssl:init_worker()
  }

  # HTTP server
  server {
    listen 80;

    # Endpoint used for performing domain verification with Let's Encrypt.
    location /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
    }
  }

  # Internal server running on port 8999 for handling certificate tasks.
  server {
    listen 127.0.0.1:8999;
    client_body_buffer_size 128k;
    client_max_body_size 128k;

    location / {
      content_by_lua_block {
        auto_ssl:hook_server()
      }
    }
  }

  # HTTPS server
  server {
    listen 443 ssl;

    server_name www.redin.co redin.co;
    error_log logs/www.redin.co-error.log;

    # Dynamic handler for issuing or returning certs for SNI domains.
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }

    # You must still define a static ssl_certificate file for nginx to start.
    #
    # You may generate a self-signed fallback with:
    #
    # openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 \
    #   -subj '/CN=sni-support-required-for-valid-ssl' \
    #   -keyout /etc/ssl/resty-auto-ssl-fallback.key \
    #   -out /etc/ssl/resty-auto-ssl-fallback.crt
    ssl_certificate default.crt;
    ssl_certificate_key default.key;

    location / {
      proxy_pass http://redin/;
    }
  }


  # pwm
  server {
    listen 443 ssl;
    server_name pwm.redin.co;
    error_log logs/pwm.redin.co-error.log;
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }
    ssl_certificate default.crt;
    ssl_certificate_key default.key;
    location / {
      proxy_pass https://pwm:8443/;
    }
  }

  # phpldapadmin
  server {
    listen 443 ssl;
    server_name ldap.redin.co;
    error_log logs/ldap.redin.co-error.log;
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }
    ssl_certificate default.crt;
    ssl_certificate_key default.key;
    location / {
      proxy_pass https://phpldapadmin:443/;
    }
  }


  # jenkins
  server {
    listen 443 ssl;
    server_name jenkins.redin.co;
    error_log logs/jenkins.redin.co-error.log;
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }
    ssl_certificate default.crt;
    ssl_certificate_key default.key;
    location / {
      proxy_pass http://jenkins/;
    }
  }

  # gerrit
  server {
    listen 443 ssl;
    server_name gerrit.redin.co;
    error_log logs/gerrit.redin.co-error.log;
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }
    ssl_certificate default.crt;
    ssl_certificate_key default.key;
    location / {
      proxy_pass http://gerrit:8080/;
    }
  }


}